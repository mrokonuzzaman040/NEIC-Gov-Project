generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Submission {
  id             String     @id @default(cuid())
  name           String?
  contact        String?
  email          String?
  district       String?
  seatName       String?
  message        String
  ipHash         String
  locale         String
  status         String     @default("PENDING")
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  source         String     @default("web")
  attachmentKey  String?
  attachmentName String?
  attachmentSize Int?
  attachmentType String?
  attachmentUrl  String?
  auditLogs      AuditLog[]

  @@index([ipHash])
  @@index([createdAt])
  @@index([district])
  @@index([seatName])
}

model AuditLog {
  id           String      @id @default(cuid())
  submissionId String?
  action       String
  actor        String?
  payload      String?
  createdAt    DateTime    @default(now())
  submission   Submission? @relation(fields: [submissionId], references: [id])
}

model User {
  id                  String               @id @default(cuid())
  email               String               @unique
  name                String?
  passwordHash        String
  role                UserRole             @default(SUPPORT)
  isActive            Boolean              @default(true)
  lastLoginAt         DateTime?
  createdAt           DateTime             @default(now())
  updatedAt           DateTime             @updatedAt
  createdBy           String?
  updatedBy           String?
  passwordResetTokens PasswordResetToken[]
  sessions            Session[]
  auditLogs           UserAuditLog[]

  @@index([email])
  @@index([role])
  @@index([isActive])
}

model Session {
  id        String   @id @default(cuid())
  userId    String
  token     String   @unique
  expiresAt DateTime
  createdAt DateTime @default(now())
  userAgent String?
  ipAddress String?
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([token])
  @@index([expiresAt])
  @@index([userId])
}

model UserAuditLog {
  id        String   @id @default(cuid())
  userId    String
  action    String
  details   String?
  ipAddress String?
  userAgent String?
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([createdAt])
}

model PasswordResetToken {
  id        String   @id @default(cuid())
  userId    String
  token     String   @unique
  expiresAt DateTime
  used      Boolean  @default(false)
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([token])
  @@index([expiresAt])
  @@index([userId])
}

model Slider {
  id            String   @id @default(cuid())
  titleEn       String
  titleBn       String
  descriptionEn String
  descriptionBn String
  image         String
  link          String
  buttonTextEn  String
  buttonTextBn  String
  categoryEn    String
  categoryBn    String
  date          DateTime @default(now())
  featured      Boolean  @default(false)
  isActive      Boolean  @default(true)
  order         Int      @default(0)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  createdBy     String?
  updatedBy     String?

  @@index([featured])
  @@index([isActive])
  @@index([order])
  @@index([createdAt])
}

model BlogPost {
  id          String   @id @default(cuid())
  slug        String   @unique
  titleEn     String
  titleBn     String
  excerptEn   String
  excerptBn   String
  contentEn   String
  contentBn   String
  authorEn    String
  authorBn    String
  category    String
  image       String
  tags        String[]
  featured    Boolean  @default(false)
  isActive    Boolean  @default(true)
  readTime    Int      @default(5)
  publishedAt DateTime @default(now())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  createdBy   String?
  updatedBy   String?

  @@index([category])
  @@index([featured])
  @@index([isActive])
  @@index([publishedAt])
  @@index([slug])
}

model FAQ {
  id         String   @id @default(cuid())
  questionEn String
  questionBn String
  answerEn   String
  answerBn   String
  category   String
  order      Int      @default(0)
  isActive   Boolean  @default(true)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  createdBy  String?
  updatedBy  String?

  @@index([category])
  @@index([isActive])
  @@index([order])
}

model Notice {
  id          String     @id @default(cuid())
  titleEn     String
  titleBn     String
  contentEn   String
  contentBn   String
  type        NoticeType @default(INFORMATION)
  priority    Priority   @default(MEDIUM)
  category    String
  publishedAt DateTime   @default(now())
  expiresAt   DateTime?
  isActive    Boolean    @default(true)
  isPinned    Boolean    @default(false)
  attachments String[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  createdBy   String?
  updatedBy   String?

  @@index([type])
  @@index([priority])
  @@index([category])
  @@index([isActive])
  @@index([isPinned])
  @@index([publishedAt])
}

model ContactInfo {
  id            String      @id @default(cuid())
  type          ContactType @default(OFFICE)
  nameEn        String
  nameBn        String
  descriptionEn String?
  descriptionBn String?
  addressEn     String?
  addressBn     String?
  phone         String?
  email         String?
  website       String?
  hoursEn       String?
  hoursBn       String?
  order         Int         @default(0)
  isActive      Boolean     @default(true)
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  createdBy     String?
  updatedBy     String?

  @@index([type])
  @@index([isActive])
  @@index([order])
}

model CommissionMember {
  id                  String   @id @default(cuid())
  image               String?
  isActive            Boolean  @default(true)
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
  createdBy           String?
  updatedBy           String?
  description_english String?
  designation_english String   @default("")
  name_english        String   @default("")
  serial_no           Int      @default(1)
  department_bengali  String?
  department_english  String?
  description_bengali String?
  designation_bengali String   @default("")
  email               String?
  name_bengali        String   @default("")
  phone               String?
  role_type           String   @default("commission_member")

  @@index([serial_no])
  @@index([isActive])
  @@index([role_type])
}

model CommissionOfficial {
  id                  String   @id @default(cuid())
  isActive            Boolean  @default(true)
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
  createdBy           String?
  updatedBy           String?
  department          String   @default("")
  designation_bangla  String   @default("")
  designation_english String   @default("")
  mobile              String   @default("")
  name_bangla         String   @default("")
  name_english        String   @default("")
  room_no             String?
  serial_no           Int      @default(1)
  telephone           String?
  category            String   @default("Chief_and_Members")
  image               String?

  @@index([category])
  @@index([isActive])
  @@index([serial_no])
}

model CommissionTerm {
  id            String    @id @default(cuid())
  titleEn       String
  titleBn       String
  descriptionEn String
  descriptionBn String
  category      String
  section       String
  order         Int       @default(0)
  effectiveFrom DateTime
  effectiveTo   DateTime?
  isActive      Boolean   @default(true)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  createdBy     String?
  updatedBy     String?

  @@index([category])
  @@index([section])
  @@index([order])
  @@index([isActive])
  @@index([effectiveFrom])
}

model Gazette {
  id            String   @id @default(cuid())
  titleEn       String
  titleBn       String
  gazetteNumber String   @unique
  category      String
  priority      Priority @default(MEDIUM)
  publishedAt   DateTime
  downloadUrl   String
  description   String?
  isActive      Boolean  @default(true)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  createdBy     String?
  updatedBy     String?

  @@index([gazetteNumber])
  @@index([category])
  @@index([priority])
  @@index([publishedAt])
  @@index([isActive])
}

model Gallery {
  id            String   @id @default(cuid())
  titleEn       String
  titleBn       String
  descriptionEn String?
  descriptionBn String?
  imageUrl      String
  imageKey      String
  category      String   @default("general")
  tags          String[] @default([])
  featured      Boolean  @default(false)
  isActive      Boolean  @default(true)
  order         Int      @default(0)
  publishedAt   DateTime @default(now())
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  createdBy     String?
  updatedBy     String?

  @@index([category])
  @@index([featured])
  @@index([isActive])
  @@index([publishedAt])
  @@index([order])
}

enum UserRole {
  ADMIN
  MANAGEMENT
  SUPPORT
}

enum NoticeType {
  ANNOUNCEMENT
  WARNING
  INFORMATION
  URGENT
}

enum Priority {
  LOW
  MEDIUM
  HIGH
  CRITICAL
}

enum ContactType {
  OFFICE
  DEPARTMENT
  PERSON
  HOTLINE
}
